package Demo;public class SolutionDP2 {        public static void main(String[] args){            int re=findPaths(8,50,19,5,26);            System.out.println(re);        }    public static int findPaths(int m, int n, int N, int i, int j) {        int[][][] cache=new int[m][n][N+1];        int re=findPaths1(m,n,N,i,j,cache);        return re;    }    public static int findPaths1(int m,int n,int N,int i,int j,int[][][] cache){        if(N<=0){            return 0;        }        if(i>m-1||j>n-1||i<0||j<0){            return 1;        }        if(cache[i][j][N]==0){            cache[i][j][N]=findPaths1(m,n,N-1,i-1,j,cache)+findPaths1(m,n,N-1,i+1,j,cache)                    +findPaths1(m,n,N-1,i,j-1,cache)+findPaths1(m,n,N-1,i,j+1,cache);        }        return cache[i][j][N];//        return findPaths1(m,n,N-1,i-1,j,cache)+findPaths1(m,n,N-1,i+1,j,cache)//                    +findPaths1(m,n,N-1,i,j-1,cache)+findPaths1(m,n,N-1,i,j+1,cache);    }}