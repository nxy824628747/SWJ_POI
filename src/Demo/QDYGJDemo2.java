package Demo;import net.sf.json.JSONObject;import org.apache.poi.xssf.usermodel.XSSFCell;import org.apache.poi.xssf.usermodel.XSSFRow;import org.apache.poi.xssf.usermodel.XSSFSheet;import org.apache.poi.xssf.usermodel.XSSFWorkbook;import javax.swing.text.html.HTMLDocument;import java.io.File;import java.io.FileInputStream;import java.io.FileOutputStream;import java.io.IOException;import java.util.ArrayList;import java.util.Iterator;import java.util.List;import java.util.Set;/** * 解析json通用版本，解析excel第一页第一列的json，生成resultsheet */public class QDYGJDemo2 {    public static void main(String[] args) {        try {            String path = getPath() + "/excel/";            File file = new File(path);            String names[] = new String[file.list().length];            names = file.list();            for (int i = 0; i < names.length; i++) {                String nowfileName = path + "/" + names[i];                System.out.println("正在处理文件   ： " + nowfileName);                doYouSelf(nowfileName);            }        }catch (Exception e){            e.printStackTrace();        }    }    public static final void doYouSelf(String fileName) throws IOException {        XSSFWorkbook excel = new XSSFWorkbook(new FileInputStream(fileName));        XSSFSheet sheet0 = excel.getSheetAt(0);        XSSFSheet sheet1 = excel.createSheet("resultSheet");        int sheet0Length = sheet0.getLastRowNum() + 1;        XSSFRow rowi = sheet0.getRow(1);        XSSFCell cell0 = rowi.getCell(0);        String value = CurrencyTools.judgeCell(cell0);        JSONObject json = JSONObject.fromObject(value);        if (json == null) {            System.out.println("第二行无数据");        }        Set js = json.keySet();        int jsl = js.size();        String[] keys = new String[js.size()];        Iterator it = js.iterator();        int i = 0;        while (it.hasNext()) {            keys[i] = it.next().toString();            i++;        }        XSSFRow rowN1 = sheet1.createRow(0);        for (int l = 0; l < jsl; l++) {            rowN1.createCell(l).setCellValue(keys[l]);        }        for (int j = 1; j < sheet0Length; j++) {            System.out.println("this is--  " + j + "  --row\\n");            XSSFRow rowNj = sheet1.createRow(j);            XSSFRow rowj = sheet0.getRow(j);            XSSFCell cell00 = rowj.getCell(0);            String value00 = CurrencyTools.judgeCell(cell00);            JSONObject json00 = JSONObject.fromObject(value00);            for (int k = 0; k < jsl; k++) {                rowNj.createCell(k).setCellValue(getV(json00, keys[k]));            }        }        excel.write(new FileOutputStream(fileName));    }    public final static String getV(JSONObject j, String key) {        Object o = j.get(key);        if (o == null) {            System.out.println("key --" + key + " --is null");            return null;        }        return o.toString();    }    private static String getPath() throws IOException{//        File file = new File(QDYGJDemo2.class.getName());        File file = new File(QDYGJDemo2.class.getResource("/").getPath());        String fatherPath = file.getPath().replace("file:\\","");        fatherPath = fatherPath.replace("Demo\\taobao-sdk-java-auto_1455552377940-20160607.jar!","");        System.out.println(fatherPath);        return fatherPath;    }}