package Demo.ytzz;import Demo.CurrencyTools;import org.apache.poi.hssf.usermodel.HSSFSheet;import org.apache.poi.hssf.usermodel.HSSFWorkbook;import org.apache.poi.xssf.usermodel.XSSFCell;import org.apache.poi.xssf.usermodel.XSSFRow;import org.apache.poi.xssf.usermodel.XSSFSheet;import org.apache.poi.xssf.usermodel.XSSFWorkbook;import java.io.File;import java.io.FileInputStream;import java.io.FileOutputStream;import java.io.IOException;import java.util.*;public class YtzzExcel {    public static void main(String[] args) throws Exception {        String guoPath = "/Users/yourouniu/Desktop/附件1：证照类型名称及代码列表.xlsx";        String shengPath = "/Users/yourouniu/Desktop/省直部门负责的证照数据归集清单.xlsx";        XSSFWorkbook sheng = new XSSFWorkbook(new File(shengPath));        XSSFWorkbook guo = new XSSFWorkbook(new FileInputStream(guoPath));        XSSFSheet shengSheet = sheng.getSheetAt(0);        XSSFSheet guoSheet = guo.getSheetAt(0);        int shengNum = shengSheet.getLastRowNum();        int guoNum = guoSheet.getLastRowNum();//        Map<String, Integer> map = new HashMap<String, Integer>();//        for (int i = 3; i < guoNum; i++) {//            XSSFRow row = guoSheet.getRow(i);//            XSSFCell cell2 = row.getCell(2);//            String code = CurrencyTools.judgeCell(cell2);//            map.put(code, i);//9//        }//        for (int i = 3; i < shengNum; i++) {//            XSSFRow row = shengSheet.getRow(i);//            XSSFCell cell3 = row.getCell(3);//            String code = CurrencyTools.judgeCell(cell3);//            if (map.containsKey(code)) {//                System.out.println(map.get(code) + " : " + code);//                XSSFRow guoRow = guoSheet.getRow(map.get(code));//                XSSFCell cell9 = guoRow.createCell(4);//                cell9.setCellValue("1");//            }//        }//        guo.write(new FileOutputStream(guoPath));        Map<String, Node> map = new HashMap<String, Node>();        for (int i = 3; i < guoNum; i++) {            XSSFRow row = guoSheet.getRow(i);            XSSFCell cell3 = row.getCell(3);            String orgName = CurrencyTools.judgeCell(cell3);            if (map.containsKey(orgName)) {                Node node = map.get(orgName);                node.num = node.num + 1;                continue;            }            map.put(orgName, new Node(orgName, 1));        }        Node[] arr = mapToArr(map);        sort(arr);        printArr(arr);    }    static void printArr(Node[] arr) {        for (int i = 0; i < arr.length; i++) {            System.out.print(arr[i].orgName + " : " + arr[i].num + " ， ");        }    }    static Node[] mapToArr(Map<String, Node> map) {        Set set = map.keySet();        Node[] arr = new Node[map.keySet().size()];        int i = 0;        Iterator iterator = set.iterator();        while (iterator.hasNext()) {            arr[i] = map.get((String) iterator.next());            i++;        }        return arr;    }    static void sort(Node[] arr) {        for (int i = 0; i < arr.length; i++) {            for (int j = i + 1; j < arr.length; j++) {                Node node0 = arr[i];                Node node1 = arr[j];                if (node1.num > node0.num) {                    arr[i] = node1;                    arr[j] = node0;                }            }        }    }    static class Node {        String orgName;        int num;        Node(String orgName, int num) {            this.orgName = orgName;            this.num = num;        }    }}