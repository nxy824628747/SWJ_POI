package learning.sort;/***   @Author Nxy*   @Date 2019/12/4 14:44*   @Description 链表实现*/public class ListNode {    private int value;    private ListNode next;    ListNode(int i) {        this.value = i;    }    public void setValue(int i){        this.value=i;    }    public int getValue(){        return this.value;    }    public ListNode getNext(){        return this.next;    }    public void setNext(ListNode n){        this.next=n;    }    public static void print(ListNode head){        System.out.println("链表为  ： ");        while(head!=null){            System.out.print(head.getValue()+",");            head=head.getNext();        }        System.out.println(" ");    }    /**    *   @Author Nxy    *   @Date 2019/12/4 16:25    *   @Param    *   @Return    *   @Exception    *   @Description 将数组转化为链表，方便构建    */    public static ListNode fromArray(int[] nums){        if(nums==null){            return null;        }        int length=nums.length;        ListNode head=new ListNode(0);        ListNode head0=head;        for(int i=0;i<length;i++){            head.setNext(new ListNode(nums[i]));            head=head.getNext();        }        return head0.getNext();    }}