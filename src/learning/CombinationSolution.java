package learning;import java.util.LinkedList;import java.util.List;public class CombinationSolution {    class Solution {        public List<List<Integer>> combinationSum(int[] candidates, int target) {            if(candidates==null){return new LinkedList<List<Integer>>();}            List<Integer> result=new LinkedList<Integer>();            List<List<Integer>> resultList=new LinkedList<List<Integer>>();            combinationSum(candidates,target,result,resultList);            return resultList;        }        public final void combinationSum(int[] candidates, int target, List<Integer> result,List<List<Integer>> resultList){            if(target<0){return;}            if(target==0){                resultList.add(result);            }            int size=candidates.length;            for(int i=0;i<size;i++){                if(i!=0){result.size();}                result.add(candidates[i]);                combinationSum(candidates,target-candidates[i],result,resultList);            }        }    }}