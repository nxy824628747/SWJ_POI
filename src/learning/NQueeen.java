package learning;public class NQueeen {    static int num=0;    public static void main(String[] args){        Chessboard chessboard=new Chessboard(8,8);        setQueens(chessboard,0);        System.out.println("共有  ："+num+"  种摆放方式");    }    /**     * @param chessboard 棋盘对象     * @param x 当前处理行数     * @Discreption N皇后回溯核心方法     */    public final static void setQueens(Chessboard chessboard,int x){        //判断一下行号是否合法        if(x<0||x>chessboard.getX()){            throw new RuntimeException("x is to large than chessboard!");        }        //回归条件，搜索到了最后一行        if(x>=chessboard.getX()){            //N皇后摆放完毕，打印棋盘            chessboard.print();            num++;            return;        }        //j为当前行的格子索引        for(int j=0;j<chessboard.getY();j++){            //判断当前格子是否可以摆放皇后            if(chessboard.canSetQueen(x,j)){                //摆放皇后                chessboard.setQueen(x,j);                //递归搜索下一行所有的可能                setQueens(chessboard,x+1);            }            //当前行的当前格子尝试完毕，清除该格子中的皇后，通过for循环尝试该行其它格子            int[][] iii=chessboard.getChessboard();            iii[x][j]=0;        }    }}