package learning;

public class Leetcode873 {
    public int lenLongestFibSubseq(int[] A) {
        return 0;
    }

    /**
     * @Author Niuxy
     * @Date 2020/5/27 10:55 下午
     * @Description
     * 最长斐波那契序列长度
     * 暴力遍历需要获取以每个元素开头的斐波那契数列的长度
     * 问题规模由 A 的长度确定，我们以此分割问题，尝试推演状态转移关系
     * G(n) 表示前 n 个元素组成的数组中，最长菲波那切数列的长度
     * 想要明确 G(n) 与 G(n+1) 之间的关系，我们需要知道 G(n) 中，那些组合可以与 A[n+1] 进行组合
     * 这样很难列出状态转移关系，我们需要知道每个组合的末尾元素
     * 不难发现，要明确 G(n) 与 G(n+1) 之间的关系，我们需要知道 G(n) 中最长数列的两个末尾元素是什么
     * 那么我们转化一下问题的定义：G(a,b) 为以 a,b 作为末尾两个元素的斐波那契数列的最大长度
     * G(b,b+1)=G(a,b) + A[b+1]==A[a]+A[b]?1:0
     *
     *
     *
     *
     */


}
